name: Fetch ExploitDB Database

on:
  schedule:
    - cron: '0 6 * * *' # runs every day at 6 AM UTC
  workflow_dispatch:     # allows manual run from GitHub UI

jobs:
  update-csv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      - name: Install git and dependencies
        run: sudo apt-get update && sudo apt-get install -y git

      - name: Clone only exploitdb.csv from ExploitDB
        run: |
          git clone --depth 1 --no-checkout https://gitlab.com/exploit-database/exploitdb.git exploitdb
          cd exploitdb
          git config core.sparseCheckout true
          echo "files_exploits.csv" > .git/info/sparse-checkout
          git checkout $(git rev-parse --abbrev-ref origin/HEAD | sed 's@^origin/@@')
          mv files_exploits.csv ../new_exploitdb.csv
          cd ..

      - name: Compare hashes
        id: compare
        run: |
          if [ -f exploitdb.csv ]; then
            OLD_HASH=$(md5sum exploitdb.csv | cut -d ' ' -f1)
          else
            OLD_HASH="none"
          fi
          NEW_HASH=$(md5sum new_exploitdb.csv | cut -d ' ' -f1)
          echo "Old: $OLD_HASH"
          echo "New: $NEW_HASH"
          if [ "$OLD_HASH" != "$NEW_HASH" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Replace file and commit if changed
        if: steps.compare.outputs.changed == 'true'
        run: |
          mv new_exploitdb.csv exploitdb.csv
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add exploitdb.csv
          git commit -m "[chore] Update exploitdb.csv"
          git push origin main
